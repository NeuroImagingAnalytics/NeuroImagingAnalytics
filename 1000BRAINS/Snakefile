# Copyright 2017 Forschungszentrum Juelich

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


import os
import numpy as np
from snakemake.io import apply_wildcards
from snakemake import shell
import shutil
from pathlib import Path
import multiprocessing
import sys

for i in sys.argv:
    if 'Snakefile' == os.path.basename(i):
        GIT_DIRECTORY = os.path.normpath(os.path.join(os.path.dirname(i), '..'))
        break
print("Git Directory: " + GIT_DIRECTORY)

verbose = True
shell.executable("/bin/bash")

#
# source /data/inm1/mapping/snakemake_3.13.3-2016b.source
#
# snakemake -p --nolock -j 48 --cluster-config cluster.json --configfile config_jureca.json \
# --cluster /data/inm1/mapping/software/2016b/installed/Snakemake_extra-3.13.3/bin/cluster_command.py -- target.nii.gz
#

SYSTEM_NAME = config['system']
CPU_CORES = int(config['cpu_cores'])
CPU_CORES_2 = int(CPU_CORES / 2)
STORAGE_PATH = config['storage_path']
SOURCE_COMMAND = '\n'.join(config['source_command']['default'])
SOURCE_COMMAND_FREESURFER = '\n'.join(config['source_command']['freesurfer'])
SOURCE_COMMAND_SNAKEMAKE = '\n'.join(config['source_command']['snakemake'])

def handle_storage(pattern):
    def handle_wildcards(wildcards):
        f = pattern.format(**wildcards)
        f_data = os.path.join(STORAGE_PATH, f)
        if os.path.exists(f_data):
            return f_data
        return f

    return handle_wildcards

onstart:
    if SYSTEM_NAME in ['jureca']:
        from os import getpid
        import subprocess

        print('Initiating jobscript master.')
        pid = getpid()
        cmd = 'python3 /data/inm1/mapping/software/2016b/installed/Snakemake_extra-3.13.3/bin/jobscript_master_debug.py {pid}'.format(pid=pid)
        subprocess.Popen(cmd, shell=True)

onsuccess:
    shutil.rmtree(".snakemake")
    print('Done.')


include: 'Snakefile_anat'
include: 'Snakefile_dmri'
